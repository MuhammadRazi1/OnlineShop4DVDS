@model IEnumerable<dynamic>
@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<table class="table">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>User Email</th>
            <th>Phone</th>
            <th>Country</th>
            <th>City</th>
            <th>Address</th>
            <th>Total Price</th>
            <th>Order Date</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.OrderId</td>
                <td>@order.UserEmail</td>
                <td>@order.Phone</td>
                <td>@order.Country</td>
                <td>@order.City</td>
                <td>@order.Address</td>
                <td>$@order.TotalAmount</td>
                <td>@order.OrderDate.ToShortDateString()</td>
                <td>
                    <button id="btn-@order.OrderId" class="btn btn-primary" onclick="markOrderFulfilled(@order.OrderId)"
                    @(order.Fulfilled ? "disabled" : "")>
                        Mark as Fulfilled
                    </button>
                    <button class="btn btn-info" data-bs-toggle="collapse" data-bs-target="#items-@order.OrderId"
                            onclick="fetchOrderItems(@order.OrderId)">
                        View Items
                    </button>
                </td>
            </tr>
            <tr class="collapse" id="items-@order.OrderId">
                <td colspan="9">
                    <div id="order-items-@order.OrderId">Loading...</div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function markOrderFulfilled(orderId) {
        fetch('/Admin/ToggleOrderStatus/' + orderId, { method: 'POST' })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById("btn-" + orderId).disabled = true;
            } else {
                alert("Failed to update order status.");
            }
        });
    }

                        function fetchOrderItems(orderId) {
        console.log("📢 Fetching items for Order ID:", orderId);

        fetch('/Admin/GetOrderItems?orderId=' + orderId)
            .then(response => response.json())
            .then(data => {
                console.log("✅ API Response:", data); // Debugging

                let itemsContainer = document.getElementById("order-items-" + orderId);
                if (data.items && data.items.length > 0) {
                    let html = "<ul class='list-group'>";
                    data.items.forEach(item => {
                        console.log(`🛒 Product: ${item.productName}, Qty: ${item.quantity}, Price: ${item.price}`);

                        let name = item.productName || "Unknown"; // Match API key: productName
                        let qty = item.quantity ?? 0; // Match API key: quantity
                        let price = item.price ?? 0.0; // Match API key: price

                        html += `<li class="list-group-item">
                                    <strong>${name}</strong> - ${qty} x $${price}
                                 </li>`;
                    });
                    html += "</ul>";
                    itemsContainer.innerHTML = html;
                } else {
                    console.warn(`⚠️ No items found for Order ID: ${orderId}`);
                    itemsContainer.innerHTML = `<p>No items found for Order ID: ${orderId}</p>`;
                }
            })
            .catch(error => {
                console.error("❌ Error loading items:", error);
                document.getElementById("order-items-" + orderId).innerHTML = "<p>Error loading items.</p>";
            });
    }



</script>
